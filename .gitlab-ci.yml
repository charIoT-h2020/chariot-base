image: python:3.6-alpine

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - test
  - deploy

test_package:
  stage: test
  services:
  - name: eclipse-mosquitto
    alias: mosquitto
  - name: influxdb:1.7-alpine
    alias: influxdb
  - name: jaegertracing/all-in-one:1.11.0
    alias: jaegertracing
  script:
    - apk add gnupg gcc g++ make python3-dev libffi-dev openssl-dev gmp-dev
    - gpg --batch --passphrase $TEST_CONFIG_PASSPHRASE -o tests/config.json tests/config.json.gpg
    - cd iot-modeling-language && python setup install && cd ..
    - pip install -r requirements_dev.txt
    - tox
  artifacts:
    paths:
      - htmlcov
    expire_in: 1 day
  only:
    - master

build_package:
  stage: build
  script:
    - apk add gcc g++ make libffi-dev openssl-dev
    - pip install -r requirements_dev.txt
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist
    expire_in: 1 day
  only:
    - tags

# docs:
#   stage: deploy
#   before_script:
#     - "true"
#   script:
#     - apk add gcc g++ make libffi-dev openssl-dev gmp-dev
#     - pip install -r requirements_dev.txt
#     - python setup.py install
#     - cd docs
#     - make html
#     - cp -fr _build ../public
#   artifacts:
#     paths:
#       - public
#   only:
#     - tags
#     - master

# pages:
#   stage: deploy
#   before_script:
#     - "true"
#   script:
#     - mkdir -p public/coverage
#     - cp -fr htmlcov/* public/coverage/
#   dependencies:
#     - test_package
#   artifacts:
#     paths:
#       - public
#   only:
#     - tags

deploy_production:
  stage: deploy
  variables:
    TWINE_USERNAME: $PRODUCTION_USERNAME
    TWINE_PASSWORD: $PRODUCTION_PASSWORD
  script:
    - pip install twine
    - twine upload dist/*
  dependencies:
    - build_package
  only:
    - tags
