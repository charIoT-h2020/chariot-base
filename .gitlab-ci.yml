image: python:3.6-alpine

variables:
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - test
  - deploy

test_package:
  stage: test
  services:
  - name: eclipse-mosquitto
    alias: mosquitto
  - name: influxdb:1.7-alpine
    alias: influxdb
  - name: jaegertracing/all-in-one:1.11.0
    alias: jaegertracing
  script:
    - apk add gnupg gcc g++ make python3-dev libffi-dev openssl-dev gmp-dev
    # - gpg --symmetric --batch --passphrase $TEST_CONFIG_PASSPHRASE --output tests/config.json.gpg tests/config.json
    - gpg --batch --passphrase $TEST_CONFIG_PASSPHRASE -o tests/config.json tests/config.json.gpg
    - pip install -r requirements_dev.txt
    - tox
  artifacts:
    paths:
      - htmlcov
    expire_in: 1 day
  only:
    - master

build_package:
  stage: build
  script:
    - apk add gcc g++ make libffi-dev openssl-dev
    - pip install -r requirements_dev.txt
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist
    expire_in: 1 day
  only:
    - tags

docs:
  stage: deploy
  before_script:
    - "true"
  script:
    - apk add gnupg gcc g++ make python3-dev libffi-dev openssl-dev gmp-dev
    - pip install -r requirements_dev.txt
    - python setup.py install
    - cd docs
    - make html
    - cp -fr _build ../public
  artifacts:
    paths:
      - public
  only:
    - tags
    - master

deploy_production:
  stage: deploy
  variables:
    TWINE_USERNAME: $PRODUCTION_USERNAME
    TWINE_PASSWORD: $PRODUCTION_PASSWORD
  script:
    - pip install twine
    - twine upload dist/*
  dependencies:
    - build_package
  only:
    - tags

build:
  image: docker:stable
  stage: build
  services:
    - docker:dind
  only:
    - tags
    - triggers
    - schedules
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $CONTAINER_IMAGE:latest || true
    - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:$CI_COMMIT_TAG --tag $CONTAINER_IMAGE:$CI_BUILD_REF --tag $CONTAINER_IMAGE:latest .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_TAG
    - docker push $CONTAINER_IMAGE:$CI_BUILD_REF
    - docker push $CONTAINER_IMAGE:latest